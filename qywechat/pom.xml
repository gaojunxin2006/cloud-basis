<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>com.gemii.ncloud</groupId>
		<artifactId>cloud-basis</artifactId>
		<version>51991-1.0</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>qywechat</artifactId>
	<packaging>pom</packaging>
	<name>Gemii cloud qywechat pom</name>
	<description>Gemii cloud qywechat pom</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven-jar-plugin.version>3.0.0</maven-jar-plugin.version>
		<spring.cloud.alibaba.version />
		<mybatis-plus.version>3.3.1</mybatis-plus.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-client</artifactId>
		</dependency>
		<dependency>
			<groupId>com.gemii.ncloud</groupId>
			<version>${cloudbasis-version}</version>
			<artifactId>common-sdk</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<!--引入swagger -->
			<dependency>
				<groupId>com.spring4all</groupId>
				<artifactId>swagger-spring-boot-starter</artifactId>
				<version>1.9.1.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>com.gemii.ncloud</groupId>
				<artifactId>liz-qywechat-common-sdk</artifactId>
				<version>${cloudbasis-version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<!-- 引入mybatis plus -->
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-boot-starter</artifactId>
				<version>${mybatis-plus.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<modules>
				<!-- <module>qywechat-action</module> -->
			</modules>
		</profile>
		<profile>
			<id>gateway</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<modules>
				<!-- <module>qywechat-action</module> -->
			</modules>
		</profile>
	</profiles>
	<build>
		<resources>
			<!-- 控制资源文件的拷贝 -->
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.*</include>
				</includes>
				<filtering>false</filtering>
				<targetPath>${project.build.directory}/config</targetPath>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.yml</include>
					<include>**/*.xml</include>
					<include>**/*.properties</include>
					<include>**/*_cert.p12</include>
				</includes>
				<filtering>false</filtering>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<!-- 设置 SpringBoot 打包插件不包含任何 Jar 依赖包 -->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<configuration>
						<includes>
							<include>
								<groupId>nothing</groupId>
								<artifactId>nothing</artifactId>
							</include>
						</includes>
					</configuration>
				</plugin>
				<!-- 设置应用 Main 参数启动依赖查找的地址指向外部 lib 文件夹 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<configuration>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<classpathLayoutType>custom</classpathLayoutType>
								<classpathPrefix>lib/</classpathPrefix>
								<customClasspathLayout>$${artifact.artifactId}-$${artifact.version}$${dashClassifier?}.$${artifact.extension}</customClasspathLayout>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<!-- 设置将 lib 拷贝到应用 Jar 外面 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<executions>
						<execution>
							<id>copy-dependencies</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
							<configuration>
								<outputDirectory>
									${project.build.directory}/lib
								</outputDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.4.13</version>
					<executions>
						<execution>
							<id>build-image</id>
							<phase>package</phase>
							<goals>
								<goal>build</goal>
							</goals>
						</execution>
						<execution>
							<id>tag-image</id>
							<phase>package</phase>
							<goals>
								<goal>tag</goal>
							</goals>
							<configuration>
								<image>${docker.image.prefix}/${project.artifactId}:${project.version}</image>
								<newName>${docker.registry}${docker.image.prefix}/${project.artifactId}:${kubeimage.version}</newName>
							</configuration>
						</execution>
						<execution>
							<id>push-image</id>
							<phase>install</phase>
							<goals>
								<goal>push</goal>
							</goals>
							<configuration>
								<imageName>${docker.registry}${docker.image.prefix}/${project.artifactId}:${kubeimage.version}</imageName>
							</configuration>
						</execution>
					</executions>
					<configuration>
						<serverId>${docker.mvnhup}</serverId>
						<registryUrl>${docker.registry.url}</registryUrl>
						<imageName>${docker.image.prefix}/${project.artifactId}:${project.version}</imageName>
						<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
						<forceTags>true</forceTags>
						<resources>
							<resource>
								<targetPath>/</targetPath>
								<directory>${project.build.directory}</directory>
								<include>${project.build.finalName}.jar</include>
							</resource>
							<resource>
								<targetPath>/</targetPath>
								<directory>${project.build.directory}</directory>
								<include>lib/*</include>
							</resource>
							<resource>
								<targetPath>/</targetPath>
								<directory>${project.build.directory}</directory>
								<include>config/*</include>
							</resource>
						</resources>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>