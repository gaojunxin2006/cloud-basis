<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.gemii.ncloud</groupId>
		<artifactId>basis</artifactId>
		<version>51991-1.0</version>
	</parent>
	<artifactId>basis-gateway</artifactId>
	<name>Gemii cloud basis-gateway</name>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-gateway</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.9.2</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.9.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-context</artifactId>
		</dependency>
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-server</artifactId>
		</dependency>
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-server-ui</artifactId>
		</dependency>
		<dependency>
			<groupId>com.gemii.ncloud</groupId>
			<artifactId>common-sdk</artifactId>
			<version>${cloudbasis-version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<plugins>
<!--			&lt;!&ndash; 设置 SpringBoot 打包插件不包含任何 Jar 依赖包 &ndash;&gt;-->
<!--			<plugin>-->
<!--				<groupId>org.springframework.boot</groupId>-->
<!--				<artifactId>spring-boot-maven-plugin</artifactId>-->
<!--			</plugin>-->
<!--			&lt;!&ndash; 设置应用 Main 参数启动依赖查找的地址指向外部 lib 文件夹 &ndash;&gt;-->
<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-jar-plugin</artifactId>-->
<!--			</plugin>-->
<!--			&lt;!&ndash; 设置将 lib 拷贝到应用 Jar 外面 &ndash;&gt;-->
<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-dependency-plugin</artifactId>-->
<!--			</plugin>-->
<!--			<plugin>-->
<!--				<groupId>com.spotify</groupId>-->
<!--				<artifactId>docker-maven-plugin</artifactId>-->
<!--				<version>0.4.13</version>-->
<!--				<configuration>-->
<!--&lt;!&ndash;					<imageName>getwayJjyTest</imageName>&ndash;&gt;-->
<!--					<imageName>${docker.image.prefix}/${project.artifactId}</imageName>-->
<!--					<dockerDirectory>src/main/docker/</dockerDirectory>-->
<!--					<dockerHost>http://172.16.11.154:5000/</dockerHost>-->
<!--					<forceTags>true</forceTags>-->
<!--					<resources>-->
<!--						<resource>-->
<!--							<targetPath>/</targetPath>-->
<!--							<directory>${project.build.directory}</directory>-->
<!--							<include>${project.build.finalName}.jar</include>-->
<!--						</resource>-->
<!--					</resources>-->

<!--				</configuration>-->

<!--				===================================================================================-->
<!--			<plugin>-->
<!--				<groupId>com.spotify</groupId>-->
<!--				<artifactId>docker-maven-plugin</artifactId>-->
<!--				<version>1.2.2</version>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<phase>package</phase>-->
<!--						<goals>-->
<!--							<goal>build</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--				</executions>-->
<!--				<configuration>-->
<!--					<imageName>tttt2021gjx</imageName>-->
<!--					&lt;!&ndash;					<registryUrl>172.16.11.154:5000</registryUrl>&ndash;&gt;-->
<!--&lt;!&ndash;					<dockerHost>http://172.16.11.154:5000/</dockerHost>&ndash;&gt;-->
<!--					<dockerDirectory>src/main/docker</dockerDirectory>-->
<!--					<pushImage>true</pushImage>-->
<!--					<imageTags>-->
<!--						<imageTag>2</imageTag>-->
<!--					</imageTags>-->
<!--					<entryPoint>["java", "-jar","/${project.build.finalName}.jar"]</entryPoint>-->
<!--					<resources>-->
<!--						<resource>-->
<!--							<directory>${project.build.directory}</directory>-->
<!--							<include>${project.build.finalName}.jar</include>-->
<!--						</resource>-->
<!--					</resources>-->
<!--				</configuration>-->
<!--			</plugin>-->

			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.2.0</version>
				<!--<executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>-->
				<configuration>
					<repository>172.16.11.154:5000/${project.artifactId}</repository>
					<tag>${project.version}</tag>
					<buildArgs>
						<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
						<JAR_EXPOSE>8082</JAR_EXPOSE>
					</buildArgs>
				</configuration>
			</plugin>


<!--		<plugins>-->
<!--			&lt;!&ndash; 打包Docker &ndash;&gt;-->
<!--			<plugin>-->
<!--				<groupId>org.springframework.boot</groupId>-->
<!--				<artifactId>spring-boot-maven-plugin</artifactId>-->
<!--			</plugin>-->
<!--			<plugin>-->
<!--				<groupId>com.spotify</groupId>-->
<!--				<artifactId>docker-maven-plugin</artifactId>-->
<!--				<version>0.4.13</version>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<phase>package</phase>-->
<!--						<goals>-->
<!--							<goal>build</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--					<execution>-->
<!--						<id>tag-image</id>-->
<!--						<phase>package</phase>-->
<!--						<goals>-->
<!--							<goal>tag</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--					<execution>-->
<!--						<id>push-image</id>-->
<!--						<phase>deploy</phase>-->
<!--						<goals>-->
<!--							<goal>push</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--				</executions>-->
<!--				<configuration>-->
<!--					&lt;!&ndash; 私有仓库配置，需要settings.xml文件配合serverId对应的服务地址 &ndash;&gt;-->
<!--					<serverId>sifu</serverId>-->
<!--					<pushImage>true</pushImage>-->
<!--					<dockerDirectory>src/main/docker</dockerDirectory>-->
<!--					<dockerHost>http://172.16.11.154:2375/</dockerHost>-->
<!--					<imageName>gjx</imageName>-->
<!--					<imageTags>-->
<!--						&lt;!&ndash;docker的tag为项目版本号、latest&ndash;&gt;-->
<!--						<imageTag>2020</imageTag>-->
<!--					</imageTags>-->
<!--					<resources>-->
<!--						<rescource>-->
<!--							<targetPath>/</targetPath>-->
<!--							<directory>${project.build.directory}</directory>-->
<!--							<include>${project.build.finalName}.jar</include>-->
<!--						</rescource>-->
<!--					</resources>-->
<!--				</configuration>-->
<!--			</plugin>-->
		</plugins>


	</build>
</project>
